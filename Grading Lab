
#include <iostream>
#include <vector>
using namespace std;

int main()
{
    vector<int> scores;
    int score;
    int choice = 0;
    int final;
    while (choice != 6) {

        cout << "\n\n\n\n\nPlease choose one of the following actions:\n" << endl;
        cout << "1. Enter Grade\n2. Remove Grade\n3. Show Grades\n4. Show Final Grade\n5. Show Final Grade, Drop Lowest\n6. Quit" << endl;
        cin >> choice;

        if (choice == 1) {//Enter grade
            cout << "Please enter your grade:" << endl;
            cin >> score;

            if (score > -1 && score < 101) {
                scores.push_back(score);
                cout << score << " successfully added to grades." << endl;
            }
            else {
                cout << "Error, grade may only be from 0-100.\nPlease try again." << endl;
            }

                //enter grade
        }
        else if (choice == 2) {//remove
            cout << "Which grade would you like removed?" << endl;

            for (int i = 0; i < scores.size(); ++i) {
                cout << scores[i] << endl;
            }

            cin >> score;
 
            if (scores.end() != find(scores.begin(), scores.end(), score))
                scores.erase(find(scores.begin(), scores.end(), score));

        }
        else if (choice == 3) {//List grades

            for (int i = 0; i < scores.size(); ++i) {
                cout << scores[i] << endl;
            }
        }
        else if (choice == 4) {//Show final

            final = 0;
            if (scores.size() > 0) {
                for (int i = 0; i < scores.size(); ++i) {
                    final += scores[i];
                }


                cout << final / scores.size() << "%" << endl;
            }
            else {
                cout << "Error, please add your grades.\n";
            }

        }
        else if (choice == 5) {//Show final, drop lowest
            if (scores.size() > 1) {

                score = 100;
                for (int i = 0; i < scores.size(); ++i) {
                    if (scores[i] < score)
                        score = scores[i];
                }

                if (scores.end() != find(scores.begin(), scores.end(), score))
                    scores.erase(find(scores.begin(), scores.end(), score));

                //log final

                final = 0;
                for (int i = 0; i < scores.size(); ++i) {
                    final += scores[i];
                }

                cout << final / scores.size() << "%" << endl;
                scores.push_back(score);

            }
            else {
                cout << "Insufficient Data" << endl;
            }

        }
        else if (choice == 6) {
            cout << "";
            //Quit
        }
        else {
            //Try again
        }
    }
}
